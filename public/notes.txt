TODO:Day template, create new, needs to reload page!

TODO:Side bar needs to be filled on most pages


Set up Production environment
Make sure Timed events are going off (set it to clear a date at a given time, just to test)
DONE# Users.  Pull from session?  Joomla's session info
DONE# calendar/edit for work-studies & level2s
TODO: "View my schedule for this week"
TODO: Javascript Based Checking on 20+ hours per week.
TODO:  Mostly done: Templates
    Can make, create, list, destroy, copy templates of both week & day.  Now it's on to applying and creating based off of templates

Aesthetics (last issue)
	Custom CSS
	Browser Based CSS Sheets
	

	User roles
		Variable limitation on # hours.  
		unique color for the table?
		DONE#Control only unclaimed and their own spots
	
	Administration
		DONE#Control ANYONE
		DONE#Make templates
		DONE#Propagate Templates into a given week
		View anyone's schedule
		
		
		
		
		
	Lock schedule once day is passed*  (Or some other criteria)

	
	Coloration
		Logged in user is shown in different color
		


//******************************************************************

Rails app shit for apache is in /etc/apache2/site/0000_207.72...


#Dave's stuff here!
        RailsBaseURI /schedule
        <Directory /Library/WebServer/Documents/schedule>
                Options -MultiViews
                Allow from all
                PassengerResolveSymlinksInDocumentRoot on
                RailsEnv development
        </Directory>








#Dave's stuff here!
        RailsBaseURI /schedule
        <Directory "/Library/WebServer/Documents/Joomla">
                <IfModule mod_dav.c>
                        DAV On
                </IfModule>
                Options All -MultiViews -ExecCGI -Indexes +Includes
                AllowOverride None
                RailsEnv development
                PassengerResolveSymlinksInDocumentRoot on
                Allow from all
        </Directory>
        <IfModule mod_proxy_balancer.c>
#               ProxyPass / balancer://balancer-group
#               ProxyPassReverse / balancer://balancer-group/
                <Proxy "balancer://balancer-group">
                </Proxy>
        </IfModule>
        <IfModule mod_alias.c>
                Alias "/collaboration" "/usr/share/collaboration"
                Alias "/icons/" "/usr/share/httpd/icons/"
                Alias "/error/" "/usr/share/httpd/error/"
        </IfModule>


//******************************************************************



//**********************************AJAX****************************
<select id = "what_state" name="state" onChange="<%= remote_function(
                                     :update => 'colleges',
                                     :url => { :action => 
'get_schools'},
                                     :with => "'state='+value",
                                     :complete => "new 
Effect.Highlight('college',{duration: 2.0,
                                                   startcolor: 
'#00FFCC',
                                                   endcolor: '#333333',
                                                   restorecolor: 
'#333333'})" ) %>">
//******************************************************************
		
//******************************************************************
a :before_filter will have to check the session table of the Joomla database
to make sure that the user is still logged in with an active session.  

on the startup of the schedule, (arriving at the site), the rail's session's user
will have to be set by looking up (using session_id) in the Joomla-db session-table

session_id comes from the php script listed below.

//******************************************************************
		
In "login" controller


#Method 1:
#	`php /Library/WebServer/Documents/Joomla/tech.php`

			
			
#In PHP scripts in Joomla/tech.php
			
	<?php
	define( '_JEXEC', 1 );
	define( 'DS', DIRECTORY_SEPARATOR );
	define('JPATH_BASE', dirname(__FILE__) );
	
	require_once ( JPATH_BASE .DS.'includes'.DS.'defines.php' );
	require_once ( JPATH_BASE .DS.'includes'.DS.'framework.php' );
	
	$mainframe =& JFactory::getApplication('site');
	$mainframe->initialise();
	
	$session =& JFactory::getSession();
	//print_r($session);
	//$user =& JFactory::getUser();
	//print_r($user);
	
	print(session_id());
	?>

//******************************************************************	


script to add to edit.html.haml for locking the editing
	
%script
  ID=window.setTimeout("update();", 1000);
  function update()
  {
  var s_timeleft= document.forms[0].timeleft.value;
  
  if(s_timeleft<=0)
  {
  document.forms[0].timeleft.value = "0";
  document.forms[0].SUBMIT.value = "Lock Expired";
  document.forms[0].SUBMIT.disabled = true;
  window.alert("You have run out of time!  Please try again.");
  =#history.back();
  }
  else
  {
  s_timeleft = document.forms[0].timeleft.value -1;
  document.forms[0].timeleft.value = s_timeleft;
  }
  ID=window.setTimeout("update();", 1000);
  }
	
//******************************************************************
	
For running cron jobs to automate a few things
	http://www.ameravant.com/posts/recurring-tasks-in-ruby-on-rails-using-runner-and-cron-jobs

//***************************************************************		
    #TODO: Finish check_for_empty? so that I can have an automated email
    #TODO: Create an automatic emailer
    #Returns true if there is an shift with no one scheduled
  def check_for_empty?(start_time, end_time)

  end